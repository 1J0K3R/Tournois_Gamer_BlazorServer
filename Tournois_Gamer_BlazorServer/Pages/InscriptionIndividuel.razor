@page "/InscriptionIndividuel"
@using System.ComponentModel.DataAnnotations;
@using Tournois_Gamer_BlazorServer.Data.Evenement;
@using Tournois_Gamer_BlazorServer.Data.Inscription;
@inject EventServices eventServices

<MudText Typo="Typo.h5">INSCRIPTION TOURNOI INDIVIDUEL</MudText>
<br />

<EditForm Model="@inscription" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>

                    <MudTextField Label="Nom du joueur" HelperText="Max. 20 characters" 
                    @bind-Value="inscription.Player.Name" For="@(() => inscription.Player.Name)" Immediate="true" />

                    <MudTextField Label="Prénom" HelperText="Max. 20 characters"
                    @bind-Value="inscription.Player.FirstName" For="@(() => inscription.Player.FirstName)" />

                    <MudDatePicker Label="Date de naissance"
                    @bind-Date="inscription.Player.DateBorn" For="@(() => inscription.Player.DateBorn)" />

                    <MudTextField Label="Pseudo du joueur" HelperText="Max. 20 characters"
                    @bind-Value="inscription.Player.Pseudo" For="@(() => inscription.Player.Pseudo)" />

                    <div class="d-flex">
                        <MudRadioGroup T="Tournament" Required="true" RequiredError="Tournament is required!" @bind-value="inscription.Tournament" For="@(() => inscription.Tournament)">
                            @foreach (var tournament in tournamentList)
                            {
                                <MudRadio Option="@tournament.Value" >@tournament.Value.TournamentName.Name @tournament.Value.Platform</MudRadio>
                            }
                        </MudRadioGroup>
                    </div>

                </MudCardContent>

                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>

            </MudCard>
        </MudItem>
    </MudGrid>
</EditForm>
    
@code {
    private InscriptionIndividual inscription = new ();
    [Required]
    private Player player = new();

    private Dictionary<int, Tournament> tournamentList = new();

    private Event? event_;

    protected override async Task OnInitializedAsync()
    {
        event_ = await eventServices.GetEventAsync();

        foreach (Tournament tournament in event_.TournamentList)
        {
            if (tournament.IsTeam is false)
            {
                tournamentList.Add(tournament.Id, tournament);
            }
        }
        inscription.Player = player;
    }

    private void OnValidSubmit(EditContext context)
    {
        inscription.Id = 1;
        inscription.Name = string.Concat(inscription.Player.Name, " ", inscription.Player.FirstName);

        // Ici on doit appeler un service qui appelle la base de données pour Intégéré notre Inscription
    }
}
@*https://mudblazor.com/components/form#using-simple-fluent-validation*@