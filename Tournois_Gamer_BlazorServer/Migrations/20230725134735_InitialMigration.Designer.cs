// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tournois_Gamer_BlazorServer.Data;

#nullable disable

namespace Tournois_Gamer_BlazorServer.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20230725134735_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.CashPrizeDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FinalistPrice")
                        .HasColumnType("int");

                    b.Property<int>("WinnersPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CashPrizeDto");
                });

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.EventDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("DatesString")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventDtos");
                });

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.TournamentDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CashPrizeId")
                        .HasColumnType("int");

                    b.Property<int>("CostEntry")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<bool>("IsTeam")
                        .HasColumnType("bit");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerNbrPerTeam")
                        .HasColumnType("int");

                    b.Property<int>("TeamNbr")
                        .HasColumnType("int");

                    b.Property<int>("TournamentNameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashPrizeId");

                    b.HasIndex("EventId");

                    b.HasIndex("TournamentNameId");

                    b.ToTable("TournamentDto");
                });

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.TournamentNameDto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("TournamentNameDto");
                });

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.EventDto", b =>
                {
                    b.OwnsOne("System.Collections.Generic.List<string>", "Schedules", b1 =>
                        {
                            b1.Property<int>("EventDtoId")
                                .HasColumnType("int");

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("EventDtoId");

                            b1.ToTable("EventDtos");

                            b1.ToJson("Schedules");

                            b1.WithOwner()
                                .HasForeignKey("EventDtoId");
                        });

                    b.Navigation("Schedules")
                        .IsRequired();
                });

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.TournamentDto", b =>
                {
                    b.HasOne("Tournois_Gamer_BlazorServer.Data.Evenement.Models.CashPrizeDto", "CashPrize")
                        .WithMany()
                        .HasForeignKey("CashPrizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tournois_Gamer_BlazorServer.Data.Evenement.Models.EventDto", "Event")
                        .WithMany("TournamentList")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tournois_Gamer_BlazorServer.Data.Evenement.Models.TournamentNameDto", "TournamentName")
                        .WithMany()
                        .HasForeignKey("TournamentNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashPrize");

                    b.Navigation("Event");

                    b.Navigation("TournamentName");
                });

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.TournamentNameDto", b =>
                {
                    b.HasOne("Tournois_Gamer_BlazorServer.Data.Evenement.Models.EventDto", "Event")
                        .WithMany("TournamentNameList")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Tournois_Gamer_BlazorServer.Data.Evenement.Models.EventDto", b =>
                {
                    b.Navigation("TournamentList");

                    b.Navigation("TournamentNameList");
                });
#pragma warning restore 612, 618
        }
    }
}
